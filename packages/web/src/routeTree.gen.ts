/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as ProtectedNewUserRouteImport } from './routes/_protected/_new-user/route'
import { Route as ProtectedExperiencedUserRouteImport } from './routes/_protected/_experienced-user/route'
import { Route as ProtectedExperiencedUserIndexImport } from './routes/_protected/_experienced-user/index'
import { Route as ProtectedExperiencedUserTransactionsImport } from './routes/_protected/_experienced-user/transactions'
import { Route as ProtectedExperiencedUserAnalyticsImport } from './routes/_protected/_experienced-user/analytics'
import { Route as ProtectedExperiencedUserAddImport } from './routes/_protected/_experienced-user/add'
import { Route as ProtectedNewUserOnboardingIndexImport } from './routes/_protected/_new-user/onboarding/index'
import { Route as ProtectedExperiencedUserSettingsIndexImport } from './routes/_protected/_experienced-user/settings/index'
import { Route as ProtectedNewUserOnboardingCompleteImport } from './routes/_protected/_new-user/onboarding/complete'
import { Route as ProtectedExperiencedUserSettingsSecurityImport } from './routes/_protected/_experienced-user/settings/security'
import { Route as ProtectedExperiencedUserSettingsProfileImport } from './routes/_protected/_experienced-user/settings/profile'
import { Route as ProtectedExperiencedUserSettingsPreferencesImport } from './routes/_protected/_experienced-user/settings/preferences'
import { Route as ProtectedExperiencedUserSettingsNotificationsImport } from './routes/_protected/_experienced-user/settings/notifications'
import { Route as ProtectedExperiencedUserSettingsLegalImport } from './routes/_protected/_experienced-user/settings/legal'
import { Route as ProtectedExperiencedUserSettingsHelpImport } from './routes/_protected/_experienced-user/settings/help'
import { Route as ProtectedExperiencedUserSettingsDataExportImport } from './routes/_protected/_experienced-user/settings/data-export'
import { Route as ProtectedExperiencedUserSettingsCategoriesImport } from './routes/_protected/_experienced-user/settings/categories'
import { Route as ProtectedExperiencedUserSettingsAccountsImport } from './routes/_protected/_experienced-user/settings/accounts'
import { Route as ProtectedNewUserOnboardingSetupCategoryImport } from './routes/_protected/_new-user/onboarding/setup/category'
import { Route as ProtectedNewUserOnboardingSetupAccountImport } from './routes/_protected/_new-user/onboarding/setup/account'

// Create/Update Routes

const ProtectedRouteRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRouteRoute,
} as any)

const ProtectedNewUserRouteRoute = ProtectedNewUserRouteImport.update({
  id: '/_new-user',
  getParentRoute: () => ProtectedRouteRoute,
} as any)

const ProtectedExperiencedUserRouteRoute =
  ProtectedExperiencedUserRouteImport.update({
    id: '/_experienced-user',
    getParentRoute: () => ProtectedRouteRoute,
  } as any)

const ProtectedExperiencedUserIndexRoute =
  ProtectedExperiencedUserIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserTransactionsRoute =
  ProtectedExperiencedUserTransactionsImport.update({
    id: '/transactions',
    path: '/transactions',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserAnalyticsRoute =
  ProtectedExperiencedUserAnalyticsImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserAddRoute =
  ProtectedExperiencedUserAddImport.update({
    id: '/add',
    path: '/add',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedNewUserOnboardingIndexRoute =
  ProtectedNewUserOnboardingIndexImport.update({
    id: '/onboarding/',
    path: '/onboarding/',
    getParentRoute: () => ProtectedNewUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsIndexRoute =
  ProtectedExperiencedUserSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedNewUserOnboardingCompleteRoute =
  ProtectedNewUserOnboardingCompleteImport.update({
    id: '/onboarding/complete',
    path: '/onboarding/complete',
    getParentRoute: () => ProtectedNewUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsSecurityRoute =
  ProtectedExperiencedUserSettingsSecurityImport.update({
    id: '/settings/security',
    path: '/settings/security',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsProfileRoute =
  ProtectedExperiencedUserSettingsProfileImport.update({
    id: '/settings/profile',
    path: '/settings/profile',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsPreferencesRoute =
  ProtectedExperiencedUserSettingsPreferencesImport.update({
    id: '/settings/preferences',
    path: '/settings/preferences',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsNotificationsRoute =
  ProtectedExperiencedUserSettingsNotificationsImport.update({
    id: '/settings/notifications',
    path: '/settings/notifications',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsLegalRoute =
  ProtectedExperiencedUserSettingsLegalImport.update({
    id: '/settings/legal',
    path: '/settings/legal',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsHelpRoute =
  ProtectedExperiencedUserSettingsHelpImport.update({
    id: '/settings/help',
    path: '/settings/help',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsDataExportRoute =
  ProtectedExperiencedUserSettingsDataExportImport.update({
    id: '/settings/data-export',
    path: '/settings/data-export',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsCategoriesRoute =
  ProtectedExperiencedUserSettingsCategoriesImport.update({
    id: '/settings/categories',
    path: '/settings/categories',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedExperiencedUserSettingsAccountsRoute =
  ProtectedExperiencedUserSettingsAccountsImport.update({
    id: '/settings/accounts',
    path: '/settings/accounts',
    getParentRoute: () => ProtectedExperiencedUserRouteRoute,
  } as any)

const ProtectedNewUserOnboardingSetupCategoryRoute =
  ProtectedNewUserOnboardingSetupCategoryImport.update({
    id: '/onboarding/setup/category',
    path: '/onboarding/setup/category',
    getParentRoute: () => ProtectedNewUserRouteRoute,
  } as any)

const ProtectedNewUserOnboardingSetupAccountRoute =
  ProtectedNewUserOnboardingSetupAccountImport.update({
    id: '/onboarding/setup/account',
    path: '/onboarding/setup/account',
    getParentRoute: () => ProtectedNewUserRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRoute
    }
    '/_protected/_experienced-user': {
      id: '/_protected/_experienced-user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedExperiencedUserRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_protected/_new-user': {
      id: '/_protected/_new-user'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedNewUserRouteImport
      parentRoute: typeof ProtectedRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/_protected/_experienced-user/add': {
      id: '/_protected/_experienced-user/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof ProtectedExperiencedUserAddImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/analytics': {
      id: '/_protected/_experienced-user/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof ProtectedExperiencedUserAnalyticsImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/transactions': {
      id: '/_protected/_experienced-user/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof ProtectedExperiencedUserTransactionsImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/': {
      id: '/_protected/_experienced-user/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedExperiencedUserIndexImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/accounts': {
      id: '/_protected/_experienced-user/settings/accounts'
      path: '/settings/accounts'
      fullPath: '/settings/accounts'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsAccountsImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/categories': {
      id: '/_protected/_experienced-user/settings/categories'
      path: '/settings/categories'
      fullPath: '/settings/categories'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsCategoriesImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/data-export': {
      id: '/_protected/_experienced-user/settings/data-export'
      path: '/settings/data-export'
      fullPath: '/settings/data-export'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsDataExportImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/help': {
      id: '/_protected/_experienced-user/settings/help'
      path: '/settings/help'
      fullPath: '/settings/help'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsHelpImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/legal': {
      id: '/_protected/_experienced-user/settings/legal'
      path: '/settings/legal'
      fullPath: '/settings/legal'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsLegalImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/notifications': {
      id: '/_protected/_experienced-user/settings/notifications'
      path: '/settings/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsNotificationsImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/preferences': {
      id: '/_protected/_experienced-user/settings/preferences'
      path: '/settings/preferences'
      fullPath: '/settings/preferences'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsPreferencesImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/profile': {
      id: '/_protected/_experienced-user/settings/profile'
      path: '/settings/profile'
      fullPath: '/settings/profile'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsProfileImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_experienced-user/settings/security': {
      id: '/_protected/_experienced-user/settings/security'
      path: '/settings/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsSecurityImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_new-user/onboarding/complete': {
      id: '/_protected/_new-user/onboarding/complete'
      path: '/onboarding/complete'
      fullPath: '/onboarding/complete'
      preLoaderRoute: typeof ProtectedNewUserOnboardingCompleteImport
      parentRoute: typeof ProtectedNewUserRouteImport
    }
    '/_protected/_experienced-user/settings/': {
      id: '/_protected/_experienced-user/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedExperiencedUserSettingsIndexImport
      parentRoute: typeof ProtectedExperiencedUserRouteImport
    }
    '/_protected/_new-user/onboarding/': {
      id: '/_protected/_new-user/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof ProtectedNewUserOnboardingIndexImport
      parentRoute: typeof ProtectedNewUserRouteImport
    }
    '/_protected/_new-user/onboarding/setup/account': {
      id: '/_protected/_new-user/onboarding/setup/account'
      path: '/onboarding/setup/account'
      fullPath: '/onboarding/setup/account'
      preLoaderRoute: typeof ProtectedNewUserOnboardingSetupAccountImport
      parentRoute: typeof ProtectedNewUserRouteImport
    }
    '/_protected/_new-user/onboarding/setup/category': {
      id: '/_protected/_new-user/onboarding/setup/category'
      path: '/onboarding/setup/category'
      fullPath: '/onboarding/setup/category'
      preLoaderRoute: typeof ProtectedNewUserOnboardingSetupCategoryImport
      parentRoute: typeof ProtectedNewUserRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ProtectedExperiencedUserRouteRouteChildren {
  ProtectedExperiencedUserAddRoute: typeof ProtectedExperiencedUserAddRoute
  ProtectedExperiencedUserAnalyticsRoute: typeof ProtectedExperiencedUserAnalyticsRoute
  ProtectedExperiencedUserTransactionsRoute: typeof ProtectedExperiencedUserTransactionsRoute
  ProtectedExperiencedUserIndexRoute: typeof ProtectedExperiencedUserIndexRoute
  ProtectedExperiencedUserSettingsAccountsRoute: typeof ProtectedExperiencedUserSettingsAccountsRoute
  ProtectedExperiencedUserSettingsCategoriesRoute: typeof ProtectedExperiencedUserSettingsCategoriesRoute
  ProtectedExperiencedUserSettingsDataExportRoute: typeof ProtectedExperiencedUserSettingsDataExportRoute
  ProtectedExperiencedUserSettingsHelpRoute: typeof ProtectedExperiencedUserSettingsHelpRoute
  ProtectedExperiencedUserSettingsLegalRoute: typeof ProtectedExperiencedUserSettingsLegalRoute
  ProtectedExperiencedUserSettingsNotificationsRoute: typeof ProtectedExperiencedUserSettingsNotificationsRoute
  ProtectedExperiencedUserSettingsPreferencesRoute: typeof ProtectedExperiencedUserSettingsPreferencesRoute
  ProtectedExperiencedUserSettingsProfileRoute: typeof ProtectedExperiencedUserSettingsProfileRoute
  ProtectedExperiencedUserSettingsSecurityRoute: typeof ProtectedExperiencedUserSettingsSecurityRoute
  ProtectedExperiencedUserSettingsIndexRoute: typeof ProtectedExperiencedUserSettingsIndexRoute
}

const ProtectedExperiencedUserRouteRouteChildren: ProtectedExperiencedUserRouteRouteChildren =
  {
    ProtectedExperiencedUserAddRoute: ProtectedExperiencedUserAddRoute,
    ProtectedExperiencedUserAnalyticsRoute:
      ProtectedExperiencedUserAnalyticsRoute,
    ProtectedExperiencedUserTransactionsRoute:
      ProtectedExperiencedUserTransactionsRoute,
    ProtectedExperiencedUserIndexRoute: ProtectedExperiencedUserIndexRoute,
    ProtectedExperiencedUserSettingsAccountsRoute:
      ProtectedExperiencedUserSettingsAccountsRoute,
    ProtectedExperiencedUserSettingsCategoriesRoute:
      ProtectedExperiencedUserSettingsCategoriesRoute,
    ProtectedExperiencedUserSettingsDataExportRoute:
      ProtectedExperiencedUserSettingsDataExportRoute,
    ProtectedExperiencedUserSettingsHelpRoute:
      ProtectedExperiencedUserSettingsHelpRoute,
    ProtectedExperiencedUserSettingsLegalRoute:
      ProtectedExperiencedUserSettingsLegalRoute,
    ProtectedExperiencedUserSettingsNotificationsRoute:
      ProtectedExperiencedUserSettingsNotificationsRoute,
    ProtectedExperiencedUserSettingsPreferencesRoute:
      ProtectedExperiencedUserSettingsPreferencesRoute,
    ProtectedExperiencedUserSettingsProfileRoute:
      ProtectedExperiencedUserSettingsProfileRoute,
    ProtectedExperiencedUserSettingsSecurityRoute:
      ProtectedExperiencedUserSettingsSecurityRoute,
    ProtectedExperiencedUserSettingsIndexRoute:
      ProtectedExperiencedUserSettingsIndexRoute,
  }

const ProtectedExperiencedUserRouteRouteWithChildren =
  ProtectedExperiencedUserRouteRoute._addFileChildren(
    ProtectedExperiencedUserRouteRouteChildren,
  )

interface ProtectedNewUserRouteRouteChildren {
  ProtectedNewUserOnboardingCompleteRoute: typeof ProtectedNewUserOnboardingCompleteRoute
  ProtectedNewUserOnboardingIndexRoute: typeof ProtectedNewUserOnboardingIndexRoute
  ProtectedNewUserOnboardingSetupAccountRoute: typeof ProtectedNewUserOnboardingSetupAccountRoute
  ProtectedNewUserOnboardingSetupCategoryRoute: typeof ProtectedNewUserOnboardingSetupCategoryRoute
}

const ProtectedNewUserRouteRouteChildren: ProtectedNewUserRouteRouteChildren = {
  ProtectedNewUserOnboardingCompleteRoute:
    ProtectedNewUserOnboardingCompleteRoute,
  ProtectedNewUserOnboardingIndexRoute: ProtectedNewUserOnboardingIndexRoute,
  ProtectedNewUserOnboardingSetupAccountRoute:
    ProtectedNewUserOnboardingSetupAccountRoute,
  ProtectedNewUserOnboardingSetupCategoryRoute:
    ProtectedNewUserOnboardingSetupCategoryRoute,
}

const ProtectedNewUserRouteRouteWithChildren =
  ProtectedNewUserRouteRoute._addFileChildren(
    ProtectedNewUserRouteRouteChildren,
  )

interface ProtectedRouteRouteChildren {
  ProtectedExperiencedUserRouteRoute: typeof ProtectedExperiencedUserRouteRouteWithChildren
  ProtectedNewUserRouteRoute: typeof ProtectedNewUserRouteRouteWithChildren
}

const ProtectedRouteRouteChildren: ProtectedRouteRouteChildren = {
  ProtectedExperiencedUserRouteRoute:
    ProtectedExperiencedUserRouteRouteWithChildren,
  ProtectedNewUserRouteRoute: ProtectedNewUserRouteRouteWithChildren,
}

const ProtectedRouteRouteWithChildren = ProtectedRouteRoute._addFileChildren(
  ProtectedRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof ProtectedNewUserRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/add': typeof ProtectedExperiencedUserAddRoute
  '/analytics': typeof ProtectedExperiencedUserAnalyticsRoute
  '/transactions': typeof ProtectedExperiencedUserTransactionsRoute
  '/': typeof ProtectedExperiencedUserIndexRoute
  '/settings/accounts': typeof ProtectedExperiencedUserSettingsAccountsRoute
  '/settings/categories': typeof ProtectedExperiencedUserSettingsCategoriesRoute
  '/settings/data-export': typeof ProtectedExperiencedUserSettingsDataExportRoute
  '/settings/help': typeof ProtectedExperiencedUserSettingsHelpRoute
  '/settings/legal': typeof ProtectedExperiencedUserSettingsLegalRoute
  '/settings/notifications': typeof ProtectedExperiencedUserSettingsNotificationsRoute
  '/settings/preferences': typeof ProtectedExperiencedUserSettingsPreferencesRoute
  '/settings/profile': typeof ProtectedExperiencedUserSettingsProfileRoute
  '/settings/security': typeof ProtectedExperiencedUserSettingsSecurityRoute
  '/onboarding/complete': typeof ProtectedNewUserOnboardingCompleteRoute
  '/settings': typeof ProtectedExperiencedUserSettingsIndexRoute
  '/onboarding': typeof ProtectedNewUserOnboardingIndexRoute
  '/onboarding/setup/account': typeof ProtectedNewUserOnboardingSetupAccountRoute
  '/onboarding/setup/category': typeof ProtectedNewUserOnboardingSetupCategoryRoute
}

export interface FileRoutesByTo {
  '': typeof ProtectedNewUserRouteRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/add': typeof ProtectedExperiencedUserAddRoute
  '/analytics': typeof ProtectedExperiencedUserAnalyticsRoute
  '/transactions': typeof ProtectedExperiencedUserTransactionsRoute
  '/': typeof ProtectedExperiencedUserIndexRoute
  '/settings/accounts': typeof ProtectedExperiencedUserSettingsAccountsRoute
  '/settings/categories': typeof ProtectedExperiencedUserSettingsCategoriesRoute
  '/settings/data-export': typeof ProtectedExperiencedUserSettingsDataExportRoute
  '/settings/help': typeof ProtectedExperiencedUserSettingsHelpRoute
  '/settings/legal': typeof ProtectedExperiencedUserSettingsLegalRoute
  '/settings/notifications': typeof ProtectedExperiencedUserSettingsNotificationsRoute
  '/settings/preferences': typeof ProtectedExperiencedUserSettingsPreferencesRoute
  '/settings/profile': typeof ProtectedExperiencedUserSettingsProfileRoute
  '/settings/security': typeof ProtectedExperiencedUserSettingsSecurityRoute
  '/onboarding/complete': typeof ProtectedNewUserOnboardingCompleteRoute
  '/settings': typeof ProtectedExperiencedUserSettingsIndexRoute
  '/onboarding': typeof ProtectedNewUserOnboardingIndexRoute
  '/onboarding/setup/account': typeof ProtectedNewUserOnboardingSetupAccountRoute
  '/onboarding/setup/category': typeof ProtectedNewUserOnboardingSetupCategoryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/_protected': typeof ProtectedRouteRouteWithChildren
  '/_protected/_experienced-user': typeof ProtectedExperiencedUserRouteRouteWithChildren
  '/_protected/_new-user': typeof ProtectedNewUserRouteRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_protected/_experienced-user/add': typeof ProtectedExperiencedUserAddRoute
  '/_protected/_experienced-user/analytics': typeof ProtectedExperiencedUserAnalyticsRoute
  '/_protected/_experienced-user/transactions': typeof ProtectedExperiencedUserTransactionsRoute
  '/_protected/_experienced-user/': typeof ProtectedExperiencedUserIndexRoute
  '/_protected/_experienced-user/settings/accounts': typeof ProtectedExperiencedUserSettingsAccountsRoute
  '/_protected/_experienced-user/settings/categories': typeof ProtectedExperiencedUserSettingsCategoriesRoute
  '/_protected/_experienced-user/settings/data-export': typeof ProtectedExperiencedUserSettingsDataExportRoute
  '/_protected/_experienced-user/settings/help': typeof ProtectedExperiencedUserSettingsHelpRoute
  '/_protected/_experienced-user/settings/legal': typeof ProtectedExperiencedUserSettingsLegalRoute
  '/_protected/_experienced-user/settings/notifications': typeof ProtectedExperiencedUserSettingsNotificationsRoute
  '/_protected/_experienced-user/settings/preferences': typeof ProtectedExperiencedUserSettingsPreferencesRoute
  '/_protected/_experienced-user/settings/profile': typeof ProtectedExperiencedUserSettingsProfileRoute
  '/_protected/_experienced-user/settings/security': typeof ProtectedExperiencedUserSettingsSecurityRoute
  '/_protected/_new-user/onboarding/complete': typeof ProtectedNewUserOnboardingCompleteRoute
  '/_protected/_experienced-user/settings/': typeof ProtectedExperiencedUserSettingsIndexRoute
  '/_protected/_new-user/onboarding/': typeof ProtectedNewUserOnboardingIndexRoute
  '/_protected/_new-user/onboarding/setup/account': typeof ProtectedNewUserOnboardingSetupAccountRoute
  '/_protected/_new-user/onboarding/setup/category': typeof ProtectedNewUserOnboardingSetupCategoryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/add'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/settings/accounts'
    | '/settings/categories'
    | '/settings/data-export'
    | '/settings/help'
    | '/settings/legal'
    | '/settings/notifications'
    | '/settings/preferences'
    | '/settings/profile'
    | '/settings/security'
    | '/onboarding/complete'
    | '/settings'
    | '/onboarding'
    | '/onboarding/setup/account'
    | '/onboarding/setup/category'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/add'
    | '/analytics'
    | '/transactions'
    | '/'
    | '/settings/accounts'
    | '/settings/categories'
    | '/settings/data-export'
    | '/settings/help'
    | '/settings/legal'
    | '/settings/notifications'
    | '/settings/preferences'
    | '/settings/profile'
    | '/settings/security'
    | '/onboarding/complete'
    | '/settings'
    | '/onboarding'
    | '/onboarding/setup/account'
    | '/onboarding/setup/category'
  id:
    | '__root__'
    | '/_auth'
    | '/_protected'
    | '/_protected/_experienced-user'
    | '/_protected/_new-user'
    | '/_auth/login'
    | '/_auth/register'
    | '/_protected/_experienced-user/add'
    | '/_protected/_experienced-user/analytics'
    | '/_protected/_experienced-user/transactions'
    | '/_protected/_experienced-user/'
    | '/_protected/_experienced-user/settings/accounts'
    | '/_protected/_experienced-user/settings/categories'
    | '/_protected/_experienced-user/settings/data-export'
    | '/_protected/_experienced-user/settings/help'
    | '/_protected/_experienced-user/settings/legal'
    | '/_protected/_experienced-user/settings/notifications'
    | '/_protected/_experienced-user/settings/preferences'
    | '/_protected/_experienced-user/settings/profile'
    | '/_protected/_experienced-user/settings/security'
    | '/_protected/_new-user/onboarding/complete'
    | '/_protected/_experienced-user/settings/'
    | '/_protected/_new-user/onboarding/'
    | '/_protected/_new-user/onboarding/setup/account'
    | '/_protected/_new-user/onboarding/setup/category'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ProtectedRouteRoute: typeof ProtectedRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ProtectedRouteRoute: ProtectedRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_protected"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/login",
        "/_auth/register"
      ]
    },
    "/_protected": {
      "filePath": "_protected/route.tsx",
      "children": [
        "/_protected/_experienced-user",
        "/_protected/_new-user"
      ]
    },
    "/_protected/_experienced-user": {
      "filePath": "_protected/_experienced-user/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_experienced-user/add",
        "/_protected/_experienced-user/analytics",
        "/_protected/_experienced-user/transactions",
        "/_protected/_experienced-user/",
        "/_protected/_experienced-user/settings/accounts",
        "/_protected/_experienced-user/settings/categories",
        "/_protected/_experienced-user/settings/data-export",
        "/_protected/_experienced-user/settings/help",
        "/_protected/_experienced-user/settings/legal",
        "/_protected/_experienced-user/settings/notifications",
        "/_protected/_experienced-user/settings/preferences",
        "/_protected/_experienced-user/settings/profile",
        "/_protected/_experienced-user/settings/security",
        "/_protected/_experienced-user/settings/"
      ]
    },
    "/_protected/_new-user": {
      "filePath": "_protected/_new-user/route.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/_new-user/onboarding/complete",
        "/_protected/_new-user/onboarding/",
        "/_protected/_new-user/onboarding/setup/account",
        "/_protected/_new-user/onboarding/setup/category"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_protected/_experienced-user/add": {
      "filePath": "_protected/_experienced-user/add.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/analytics": {
      "filePath": "_protected/_experienced-user/analytics.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/transactions": {
      "filePath": "_protected/_experienced-user/transactions.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/": {
      "filePath": "_protected/_experienced-user/index.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/accounts": {
      "filePath": "_protected/_experienced-user/settings/accounts.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/categories": {
      "filePath": "_protected/_experienced-user/settings/categories.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/data-export": {
      "filePath": "_protected/_experienced-user/settings/data-export.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/help": {
      "filePath": "_protected/_experienced-user/settings/help.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/legal": {
      "filePath": "_protected/_experienced-user/settings/legal.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/notifications": {
      "filePath": "_protected/_experienced-user/settings/notifications.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/preferences": {
      "filePath": "_protected/_experienced-user/settings/preferences.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/profile": {
      "filePath": "_protected/_experienced-user/settings/profile.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_experienced-user/settings/security": {
      "filePath": "_protected/_experienced-user/settings/security.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_new-user/onboarding/complete": {
      "filePath": "_protected/_new-user/onboarding/complete.tsx",
      "parent": "/_protected/_new-user"
    },
    "/_protected/_experienced-user/settings/": {
      "filePath": "_protected/_experienced-user/settings/index.tsx",
      "parent": "/_protected/_experienced-user"
    },
    "/_protected/_new-user/onboarding/": {
      "filePath": "_protected/_new-user/onboarding/index.tsx",
      "parent": "/_protected/_new-user"
    },
    "/_protected/_new-user/onboarding/setup/account": {
      "filePath": "_protected/_new-user/onboarding/setup/account.tsx",
      "parent": "/_protected/_new-user"
    },
    "/_protected/_new-user/onboarding/setup/category": {
      "filePath": "_protected/_new-user/onboarding/setup/category.tsx",
      "parent": "/_protected/_new-user"
    }
  }
}
ROUTE_MANIFEST_END */
