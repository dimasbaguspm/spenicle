
# YAML anchors for environment variables
x-api-env: &api-env
  NODE_ENV: ${NODE_ENV}
  API_PORT: ${API_PORT}
  API_STAGE: ${API_STAGE}
  API_PGHOST: ${API_PGHOST}
  API_PGUSER: ${API_PGUSER}
  API_PGPASSWORD: ${API_PGPASSWORD}
  API_PGDATABASE: ${API_PGDATABASE}
  API_PGPORT: ${API_PGPORT}
  API_DATABASE_URL: ${API_DATABASE_URL}
  API_JWT_SECRET: ${API_JWT_SECRET}
  

x-web-env: &web-env
  NODE_ENV: ${NODE_ENV}
  WEB_PORT: ${WEB_PORT}
  WEB_STAGE: ${WEB_STAGE}
  VITE_API_BASE_URL: ${VITE_API_BASE_URL}

x-db-backup-env: &db-backup-env
  POSTGRES_USER: ${POSTGRES_USER}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  PGPASSWORD: ${POSTGRES_PASSWORD}
  BACKUP_INTERVAL_HOURS: ${BACKUP_INTERVAL_HOURS}

services:
  postgres:
    image: postgres:16
    container_name: spenicle-staging-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: "0.4"
        reservations:
          memory: 200M
          cpus: "0.2"

  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile.prod
      args:
        <<: *api-env
    container_name: spenicle-staging-api
    environment:
      <<: *api-env
      API_PGDATA: ${API_PGDATA}  # Additional env var not in build args
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 330M
          cpus: "0.35"
        reservations:
          memory: 200M
          cpus: "0.18"

  web:
    build:
      context: .
      dockerfile: packages/web/Dockerfile.prod
      args:
        <<: *web-env
    container_name: spenicle-staging-web
    environment:
      <<: *web-env
    depends_on:
      - api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 120M
          cpus: "0.15"
        reservations:
          memory: 60M
          cpus: "0.08"

  nginx:
    image: nginx:1.25-alpine
    container_name: spenicle-staging-nginx
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - web
      - api
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 50M
          cpus: "0.1"
        reservations:
          memory: 25M
          cpus: "0.05"

volumes:
  postgres_data:
